definitions:
  models.Casestudy:
    properties:
      url:
        type: string
    type: object
  models.GenerateAIBody:
    properties:
      company_url:
        type: string
      linkedin_url:
        type: string
      stream:
        type: boolean
      system_prompt:
        type: string
      task:
        type: string
      to_do_research:
        type: boolean
    type: object
  models.PainPointRole:
    properties:
      role:
        type: string
    type: object
  models.Prompts:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      name:
        type: string
      prompt:
        type: string
      prompt_rule:
        type: string
      purpose:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.UploadRequest:
    properties:
      file_data:
        type: string
    type: object
  models.Users:
    properties:
      user_ids:
        items:
          type: string
        type: array
    type: object
  responses.ApplicationResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status:
        type: integer
    type: object
info:
  contact: {}
  description: Init App aiagent Open Api Spec
  title: Init App aiagent
  version: "1.0"
paths:
  /initializ/v1/ai/allusers:
    get:
      description: Get all Data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
      summary: Get User Data
      tags:
      - UserData Apis
  /initializ/v1/ai/casestudy:
    get:
      description: Get Case Study Api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
      summary: Get Case Study
      tags:
      - Case Study Apis
    post:
      description: Save Case Study
      parameters:
      - description: Case Study
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Casestudy'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
      summary: Save Case Study
      tags:
      - Case Study Apis
  /initializ/v1/ai/casestudy/{id}:
    delete:
      description: Delete Case Study by ID
      parameters:
      - description: Case Study ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
      summary: Delete Case Study by ID
      tags:
      - Case Study Apis
  /initializ/v1/ai/generatewithAI:
    post:
      description: Generate with AI
      parameters:
      - description: Generate Body Response
        in: body
        name: GenerateAI
        required: true
        schema:
          $ref: '#/definitions/models.GenerateAIBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
      summary: Generate with AI
      tags:
      - AIAgent Apis
  /initializ/v1/ai/painpoints:
    get:
      description: Get all Pain Points and Value Proposition
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
      summary: Get Pain Points and Value Proposition
      tags:
      - Pain Points Apis
    post:
      description: Save Pain Points and Value Proposition
      parameters:
      - description: Pain Points and Value Proposition
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.PainPointRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
      summary: Save Pain Points and Value Proposition
      tags:
      - Pain Points Apis
  /initializ/v1/ai/painpoints/{id}:
    delete:
      description: Delete Pain Points and Value Proposition by ID
      parameters:
      - description: Pain Points ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
      summary: Delete Pain Points and Value Proposition by ID
      tags:
      - Pain Points Apis
  /initializ/v1/ai/prompt/{promptId}:
    get:
      description: Get AI Prompts by ID
      parameters:
      - description: promptId
        in: path
        name: promptId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
      summary: Get Prompt by ID
      tags:
      - Prompt Apis
  /initializ/v1/ai/prompts:
    get:
      description: Get all AI Prompts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
      summary: Get Prompts
      tags:
      - Prompt Apis
  /initializ/v1/ai/saveprompt:
    post:
      description: Save Prompt
      parameters:
      - description: Add the prompt in the Db
        in: body
        name: Prompt
        required: true
        schema:
          $ref: '#/definitions/models.Prompts'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
      summary: Save Prompt
      tags:
      - Prompt Apis
  /initializ/v1/ai/updateprompt/{promptId}:
    put:
      description: Update Prompt In Db
      parameters:
      - description: promptId
        in: path
        name: promptId
        required: true
        type: string
      - description: Update the prompt in the Db
        in: body
        name: Prompt
        required: true
        schema:
          $ref: '#/definitions/models.Prompts'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
      summary: Update Prompt
      tags:
      - Prompt Apis
  /initializ/v1/ai/upload:
    post:
      description: Upload Excel File in Base 64 format
      parameters:
      - description: File metadata
        in: body
        name: metadata
        required: true
        schema:
          $ref: '#/definitions/models.UploadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
      summary: Upload Excel File
      tags:
      - UserData Apis
  /initializ/v1/ai/user/delete:
    delete:
      description: Delete Users by their Ids
      parameters:
      - description: userid
        in: body
        name: UserId
        required: true
        schema:
          $ref: '#/definitions/models.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ApplicationResponse'
      summary: Delete Users
      tags:
      - UserData Apis
swagger: "2.0"
